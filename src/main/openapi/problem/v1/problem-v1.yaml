openapi: 3.0.0
info:
  title: problem types
  version: ${project.version}
servers: []
paths: {}
components:
  responses:
    ProblemResponse:
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
      description: a problem
  schemas:
    Problem:
      description: A Problem Details object (RFC 7807)
      type: object
      properties:
        type:
          type: string
          format: uri
          description: An URI reference that identifies the problem type. When dereferenced, it SHOULD provide human-readable documentation for the problem type (e.g. using HTML).
          default: about:blank
        title:
          type: string
          description: A short, summary of the problem type. Written in english and readable for engineers (usually not suited for non technical stakeholders and not localized)
          example: Service Unavailable
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          format: uri
          description: A URI reference that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
    InvalidParamProblem:
      description: Problem details for invalid input parameter(s)
      type: object
      allOf:
        - $ref: "#/components/schemas/Problem"
      properties:
        invalidParams:
          type: array
          description: An array of parameter OpenAPI violations
          items:
            $ref: "#/components/schemas/InvalidParam"
    InvalidParam:
      type: object
      properties:
        in:
          description: The location of the invalid parameter (cfr Swagger parameters)
          type: string
          enum:
            - body
            - path
            - query
            - header
        name:
          description: The name of the invalid parameter
          type: string
        reason:
          description: A message explaining the violation
          type: string
        value:
          description: The value of the erroneous parameter
          # no type specified, allowing any type. This is valid OpenAPI 3.0 even though some editors may indicate an error (issue #25)