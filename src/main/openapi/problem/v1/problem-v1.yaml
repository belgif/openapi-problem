openapi: 3.0.0
info:
  title: problem types
  version: ${project.version}
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers: []
paths: {}
components:
  responses:
    ProblemResponse:
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/Problem"
      description: a problem
    InputValidationProblemResponse:
      content:
        application/problem+json:
          schema:
            $ref: "#/components/schemas/InputValidationProblem"
      description: A problem caused by invalid input
  schemas:
    Problem:
      description: A Problem Details object (RFC 7807)
      type: object
      properties:
        type:
          type: string
          format: uri
          description: An absolute URI that identifies the problem type
          default: about:blank  # kept for backwards-compatibility, type will be mandatory in problem-v2
        href:
          type: string
          format: uri
          description: An absolute URI that, when dereferenced, provides human-readable documentation for the problem type (e.g. using HTML).
        title:
          type: string
          description: A short summary of the problem type. Written in English and readable for engineers (usually not suited for non technical stakeholders and not localized).
          example: Service Unavailable
        status:
          type: integer
          format: int32
          description: The HTTP status code generated by the origin server for this occurrence of the problem.
          minimum: 400
          maximum: 600
          exclusiveMaximum: true
          example: 503
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of the problem
        instance:
          type: string
          format: uri
          description: An absolute URI that identifies the specific occurrence of the problem. It may or may not yield further information if dereferenced.
      example:
        {
          "type": "urn:problem-type:belgif:exampleProblem",
          "href": "https://www.belgif.be/specification/rest/api-guide/#standardized-problem-types",
          "title": "Description of exampleProblem type",
          "status": 400, # HTTP response status, appropriate for the problem type
          "detail": "Description of specific occurrence of exampleProblem",
          "instance": "urn:uuid:123e4567-e89b-12d3-a456-426614174000"
          # additional properties specific to the problem type may be present
        }
    InvalidParamProblem:
      deprecated: true # deprecated by InputValidationProblem
      description: Problem details for invalid input parameter(s)
      type: object
      allOf:
        - $ref: "#/components/schemas/Problem"
      properties:
        invalidParams:
          type: array
          description: An array of parameter OpenAPI violations
          items:
            $ref: "#/components/schemas/InvalidParam"
    InvalidParam:
      deprecated: true # deprecated by InputValidationIssue (within an InputValidationProblem)
      type: object
      properties:
        in:
          description: The location of the invalid parameter (cfr Swagger parameters)
          type: string
          enum:
            - body
            - path
            - query
            - header
        name:
          description: The name of the invalid parameter
          type: string
        value:
          description: The value of the erroneous parameter
          # no type specified, allowing any type. This is valid OpenAPI 3.0 even though some editors may indicate an error (issue #25)
    InputValidationProblem:
      type: object
      allOf:
      - $ref: "#/components/schemas/Problem"
      properties:
        issues:
          type: array
          items:
            $ref: "#/components/schemas/InputValidationIssue"
      example:
        type:  urn:problem-type:belgif:badRequest 
        href: https://www.belgif.be/specification/rest/api-guide/problems/badRequest.html
        title: Bad Request
        status: 400
        detail:  "The input message is incorrect"
        instance: urn:uuid:123456-1234-1235-4567489798
        issues:
        - type: urn:problem-type:belgif:input-validation:schemaViolation #mandatory
          # href: TODO: foresee dereferenceable link for belgif input validation problems
          title: "Input isn't valid with respect to schema"
          detail: enterpriseNumber abc should be numeric # recommended, if more detail can be provided
          in: path
          name: enterpriseNumber
          value: abc
        - type: urn:problem-type:belgif:input-validation:schemaViolation
          title: "Input isn't valid with respect to schema"
          detail: "ssin a2345678901 doesn't match pattern '^\d{11}$'"
          in: body
          name: parent[0].ssin
          value: "a2345678901"
    InputValidationIssue:
      type: object
      allOf:
        - $ref: "#/components/schemas/Problem"
        # status property of Problem is usually not used for input validation issues
      properties:
        in:
          type: string
          enum:
            - body
            - header
            - path
            - query
        name:
          type: string
        value: {} # any type allowed
